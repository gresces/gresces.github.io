<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gresces</title>
    <link>https://gresces.github.io/posts/</link>
    <description>Recent content in Posts on Gresces</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>gresces.github.io</copyright>
    <lastBuildDate>Tue, 10 Jun 2025 23:46:32 +0800</lastBuildDate>
    <atom:link href="https://gresces.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于n8n的MCP实用构建</title>
      <link>https://gresces.github.io/posts/agent-in-n8n/</link>
      <pubDate>Tue, 10 Jun 2025 23:46:32 +0800</pubDate>
      <guid>https://gresces.github.io/posts/agent-in-n8n/</guid>
      <description>&lt;p&gt;本文提供：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在n8n中构建一个agent工作流&lt;/li&gt;&#xA;&lt;li&gt;在n8n中添加自定义mcp client&lt;/li&gt;&#xA;&lt;li&gt;使用python构建mcp server并在n8n工作流中连接&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;0-背景&#34;&gt;0. 背景&lt;/h2&gt;&#xA;&lt;p&gt;本文读者一般对MCP有一定了解，这里不进行解释。如果你需要知道背景知识，请看：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/29001189476&#34;&gt;LastWhisper：MCP (Model Context Protocol)，一篇就够了。&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文使用n8n构建一个完整的agent工作流，需要你在本机或服务器上部署一个n8n实例，当然如果你使用其他flow工具，可以参考本文章的mcp server构建部分。本文不提供n8n部署相关知识。&lt;/p&gt;&#xA;&lt;p&gt;注意，最好使用高于1.88版本的n8n，否则使用deepseek作为LLM时可能会有&lt;a href=&#34;https://github.com/n8n-io/n8n/issues/14574&#34;&gt;422报错&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/1905634565013369483&#34;&gt;GeGarron：n8n 全方位安装指南：从本地部署到云端运行&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-在n8n中构建一个agent工作流&#34;&gt;1. 在n8n中构建一个agent工作流&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-创建一个工作流&#34;&gt;1.1 创建一个工作流&lt;/h3&gt;&#xA;&lt;p&gt;在n8n中通常是以工作流为单位进行工作的，在本例中，一个完整的聊天agent即为一个工作流。&#xA;在overview界面点击右上角的&lt;strong&gt;Create Workflow&lt;/strong&gt;创建一个工作流。&#xA;在n8n中，一个工作流的开始一般是一个触发器，点击中间的 + 图标，有很多触发器可供选择，这里选择&lt;strong&gt;On chat message&lt;/strong&gt;触发器即可，这个触发器在聊天框输入语句进行触发。&#xA;&#xA;  &lt;figure class=&#34;figure&#34;&gt;&#xA;    &lt;img class=&#34;img&#34; src=&#34;image.png&#34;&gt;&#xA;    &lt;figcaption class=&#34;center-align caption-text&#34;&gt;选择这个trigger&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-创建agent&#34;&gt;1.2 创建agent&lt;/h3&gt;&#xA;&lt;p&gt;在创建完一个最基础的工作流之后，需要丰富这个工作流的内容，特别是加入LLM进行工具调用指导。&lt;/p&gt;&#xA;&lt;p&gt;点击第一个trigger节点的加号，创建第二个节点，输入agent，选择&lt;strong&gt;AI Agent&lt;/strong&gt;，之后点击左上角退回画布，可以发现多了一个Agent节点。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;figure class=&#34;figure&#34;&gt;&#xA;    &lt;img class=&#34;img&#34; src=&#34;image-1.png&#34;&gt;&#xA;    &lt;figcaption class=&#34;center-align caption-text&#34;&gt;选择AI Agent&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;可以发现，在Agent节点中，我们可以自定义的子节点（这玩意儿在n8n中叫sub-node）有：Chat Model、Memory和Tool。这几个子节点分别表示：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Chat Model 接入的大语言模型，输入用户输入后输出工具调用信息，输入工具返回信息输出加工后的信息&lt;/li&gt;&#xA;&lt;li&gt;Memory 记录对话内容，提供上下文功能&lt;/li&gt;&#xA;&lt;li&gt;Tool 工具，agent&amp;quot;调用&amp;quot;的过程（mcp client、n8n节点或者n8n工作流）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;![](image-2.png &amp;ldquo;AI Agent节点的&amp;quot;接口&amp;rdquo;&amp;quot;)&lt;/p&gt;&#xA;&lt;p&gt;下面我们将逐项配置这三项：&lt;/p&gt;&#xA;&lt;h4 id=&#34;chat-model&#34;&gt;Chat Model&lt;/h4&gt;&#xA;&lt;p&gt;起手式点击 + 号，可以看到n8n提供了一系列的聊天模型节点供使用，比如DeepSeek和OpenAI。由于DeepSeek提供的API和OpenAI的API形式上相同，所以如果你选择DeepSeek模型，这两种节点都可以使用，本例使用OpenAI节点接入DeepSeek API。&lt;/p&gt;&#xA;&lt;p&gt;国内使用&amp;quot;SuckDick&amp;quot;模型非常方便，在&lt;a href=&#34;https://platform.deepseek.com/&#34;&gt;DeepSeek开放平台&lt;/a&gt;注册后获取一个API key即可。&lt;/p&gt;&#xA;&lt;p&gt;双击加入的OpenAI节点，在Credential下拉菜单中选择&lt;strong&gt;创建新的凭证&lt;/strong&gt;，填入获取到的API key，并按照&lt;a href=&#34;https://api-docs.deepseek.com/&#34;&gt;DeepSeek文档&lt;/a&gt;中提示的修改Base URL即可。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;figure class=&#34;figure&#34;&gt;&#xA;    &lt;img class=&#34;img&#34; src=&#34;image-3.png&#34;&gt;&#xA;    &lt;figcaption class=&#34;center-align caption-text&#34;&gt;点就完了&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;![](image-4.png &amp;ldquo;只需要修改API Key和Base URL，成功后会有绿色提示&amp;quot;Connection tested successfully&amp;rdquo;&amp;quot;)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
